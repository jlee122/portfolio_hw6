{"version":3,"sources":["Components/Tab.js","Components/Tablist.js","Components/Home.js","Components/About.js","Components/Resume.js","Components/Projects.js","config.js","Components/Guestbook.js","Components/Movie.js","Components/Body.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Tab","addStyling","props","tab","id","activeTab","backgroundColor","className","style","this","onClick","changeTab","bind","title","Component","Tablist","tabs","map","Home","src","alt","About","Resume","width","Projects","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","options","value","label","Guestbook","state","name","desc","msg","posts","handleChange","handleSubmit","event","undefined","setState","target","preventDefault","itemsRef","database","ref","time","ServerValue","TIMESTAMP","Date","post","toLocaleString","push","on","snapshot","items","val","newState","item","prevProps","prevState","snapshoyt","shouldUpdate","onSubmit","type","required","minlength","maxlength","onChange","email","key","axios","require","PREFIX","getMoviePoster","movie","a","get","res","data","x","document","getElementById","toString","console","log","Movie","movies","Body","displayContent","Footer","href","icon","faGithub","faLinkedin","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ffb26a74.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Tab extends Component {\r\n    addStyling = () => {\r\n        if(this.props.tab.id == this.props.activeTab) {\r\n            return {backgroundColor: \"gray\"}\r\n        }\r\n        else{\r\n            return {backgroundColor: \"black\"}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='tab' style={this.addStyling()} \r\n                onClick={this.props.changeTab.bind(this, this.props.tab.id)}>\r\n                <h5 className='tab_title'>{this.props.tab.title}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tab;","import React, { Component } from 'react'\r\nimport Tab from './Tab'\r\n\r\nexport class Tablist extends Component {\r\n    render() {\r\n        return this.props.tabs.map((tab) => (\r\n            <Tab tab={tab} \r\n            activeTab={this.props.activeTab} \r\n            changeTab={this.props.changeTab}/>\r\n        ));\r\n    }\r\n}\r\nexport default Tablist;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"ucsb-image\">\r\n                    <img src=\"ucsb.jpg\" alt=\"UCSB\"></img>\r\n                </div>\r\n                <div className=\"home-text\">\r\n                    <h2>Joon's Portfolio</h2>\r\n                    <p>Hi! Welcome to my portfolio website</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <div className=\"profile-image\">\r\n                    <img src=\"profile.png\"></img>\r\n                </div>\r\n                <div className=\"about-text\">\r\n                    <h2>About me</h2>\r\n                    <p>My name is Joon Lee, currently a 4th year at UCSB, studying computer science.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default About;","import React, { Component } from 'react'\r\n\r\nexport class Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"resume-grid\">\r\n                <div className=\"resume\">\r\n                    <div className=\"resume-pic\">\r\n                        <img src=\"nexa-logo.png\" width=\"200px\"></img>\r\n                    </div>\r\n                    <div className=\"resume-title\">\r\n                        <h3>Software Developer</h3>\r\n                        <p>Developed user interface and server for its main product, 3D printers, using Python, QML, C++ Developed a feature that lets printers and computers to communicate through HTTP protocol Gained experience in working with a team and using task managing software, such as Confluence, Jira, Git, and BitBucket</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"resume\">\r\n                    <div className=\"resume-pic\"><img src=\"xponentialworks-logo.jpg\"></img></div>                \r\n                    <div className=\"resume-title\">\r\n                        <h3>Software Development & QA Intern</h3>\r\n                        <p>Gained experience in user testing, continuous integration and deployment, and quality control Familiarized with using Google Cloud Platform, Docker, Kubernetes, and App Engine Developed features and tests for single-page application using Vue.js framework Wrote tests requiring use of GCP with Go Language.</p>\r\n                </div>  \r\n            </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resume;","import React, { Component } from 'react'\r\nimport { SRLWrapper } from \"simple-react-lightbox\"\r\nimport ScrollUpButton from \"react-scroll-up-button\"\r\n\r\nexport class Projects extends Component {\r\n    render() {\r\n        return (\r\n            <SRLWrapper>\r\n            <div className=\"projects-grid\">\r\n                <div className=\"project-img\">\r\n                    <img src=\"navSB.png\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic1.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic2.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic3.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic4.jpg\"></img>\r\n                </div>\r\n                <div className=\"project-img\">\r\n                    <img src=\"nexa3d-pic5.jpg\"></img>\r\n                </div>\r\n            </div>\r\n            <ScrollUpButton />\r\n            </SRLWrapper>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\nexport default Projects;","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD63-jm_DDZp7m4YKcoxoijQVpodPW_qik\",\r\n    authDomain: \"portfolio-2df59.firebaseapp.com\",\r\n    databaseURL: \"https://portfolio-2df59.firebaseio.com\",\r\n    projectId: \"portfolio-2df59\",\r\n    storageBucket: \"portfolio-2df59.appspot.com\",\r\n    messagingSenderId: \"1058051044143\",\r\n    appId: \"1:1058051044143:web:cd658828d6d2401f58e7da\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport firebase from '../config.js'\r\n\r\nconst options = [\r\n    { value: 'Yes', label: 'Yes' },\r\n    { value: 'No', label: 'No'}\r\n]\r\n\r\nexport class Guestbook extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {name: '', desc: '', msg: '', options: '', posts: []};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n      \r\n    handleChange(event){\r\n        if(event.value === undefined){\r\n            this.setState({[event.target.name]: event.target.value});  \r\n        }else{\r\n            this.setState({options: event.value});\r\n        }\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const itemsRef = firebase.database().ref('data');\r\n        var t = firebase.database.ServerValue.TIMESTAMP\r\n        var time = new Date()\r\n        const post = {\r\n            name: this.state.name,\r\n            desc: this.state.desc,\r\n            msg: this.state.msg,\r\n            options: this.state.options,\r\n            time: time.toLocaleString()\r\n        };\r\n        itemsRef.push(post);\r\n        this.setState({\r\n            name: '', desc: '', msg: ''\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        const itemsRef = firebase.database().ref('data');\r\n        itemsRef.on('value', (snapshot) => {\r\n          let items = snapshot.val();\r\n          let newState = [];\r\n          for (let item in items) {\r\n            newState.push({\r\n              id: item,\r\n              name: items[item].name,\r\n              desc: items[item].desc,\r\n              msg: items[item].msg,\r\n              options: items[item].options,\r\n              time: items[item].time\r\n            });\r\n          }\r\n          \r\n          this.setState({\r\n            posts: newState\r\n          });\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshoyt){\r\n    //only call set state here if it is wrapped in a condition\r\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\r\n        if(this.state.shouldUpdate != prevState.shouldUpdate){\r\n            //same code as above to retrieve the data\r\n            const itemsRef = firebase.database().ref('data');\r\n            itemsRef.on('value', (snapshot) => {\r\n            let items = snapshot.val();\r\n            let newState = [];\r\n            for (let item in items) {\r\n                newState.push({\r\n                id: item,\r\n                name: items[item].name,\r\n                desc: items[item].desc,\r\n                msg: items[item].msg,\r\n                options: items[item].options,\r\n                time: items[item].time\r\n                });\r\n            }\r\n            this.setState({\r\n                posts: newState\r\n            });\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"guestbook\">\r\n                <div className=\"guestform\">\r\n                    <h2 id=\"guestText\">Leave me a message, and let everyone know you visited!</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            What is your name?\r\n                            <input type=\"text\" name=\"name\" required minlength=\"5\" maxlength=\"20\" value={this.state.name} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Tell me a little about yourself.\r\n                            <input type=\"text\" name=\"desc\" value={this.state.desc} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Leave a message to my guestbook!\r\n                            <input type=\"text\" name=\"msg\" required minlength=\"15\" maxlength=\"500\" value={this.state.msg} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Would you like your name and message to be viewable by other guests of this site?\r\n                            <Select name=\"options\" required options={options} onChange={this.handleChange}/>\r\n                        </label>\r\n                        <label>\r\n                            If you would like me to be able to contact you, Please leave your email. (Your email will not be posted)\r\n                            <input type=\"text\" email=\"email\"/>\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Send Message\"/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"posts\">\r\n                    <div className=\"post\">\r\n                        <ul>\r\n                            {this.state.posts.map((post) => {\r\n                                if (post.options === 'Yes') {\r\n                                    return (\r\n                                        <li key={post.id}>\r\n                                            <h6>{post.time}</h6>\r\n                                            <h3>{post.name}</h3>\r\n                                            <h5>{post.desc}</h5>\r\n                                            <p>{post.msg}</p>\r\n                                        </li>\r\n                                    )        \r\n                                }\r\n                                \r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Guestbook;","import React, { Component } from 'react'\r\nimport { SRLWrapper } from \"simple-react-lightbox\"\r\nimport ScrollUpButton from \"react-scroll-up-button\"\r\n\r\nconst axios = require('axios')\r\n\r\nconst PREFIX = 'https://www.omdbapi.com/?apikey=ec83e25b&i='\r\n\r\nasync function getMoviePoster(movie){\r\n    try {\r\n        const res = await axios.get(PREFIX+movie)\r\n        const data = res.data;\r\n        var x = document.getElementById(movie)\r\n        x.src = data[\"Poster\"].toString()\r\n        x.alt = data[\"Title\"] + \",  Director: \" + data[\"Director\"] + \",  IMDB Rating: \" + data[\"imdbRating\"]\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }   \r\n}\r\n\r\nexport class Movie extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movies: [ 'tt7286456', 'tt4154796', 'tt0816692', 'tt1375666', 'tt1706620', 'tt3501632', 'tt0993846', 'tt4154756', 'tt5463162']\r\n        };\r\n        for (let movie in this.state.movies){\r\n            getMoviePoster(this.state.movies[movie])\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <SRLWrapper>\r\n            <div className=\"movie-grid\">\r\n                {this.state.movies.map((id) => {                     \r\n                    return (\r\n                        <div className=\"movie\">\r\n                            <SRLWrapper>\r\n                                <img id={id}></img>\r\n                            </SRLWrapper>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <ScrollUpButton />\r\n            </SRLWrapper>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Movie;","import React, { Component } from 'react'\r\nimport Home from './Home'\r\nimport About from './About'\r\nimport Resume from './Resume'\r\nimport Projects from './Projects'\r\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\"\r\nimport Guestbook from './Guestbook'\r\nimport Movie from './Movie'\r\n\r\nexport class Body extends Component {\r\n    displayContent = () => {\r\n        var activeTab = this.props.activeTab\r\n        if(activeTab == 1)\r\n            return <Home/>\r\n        else if(activeTab == 2)\r\n            return <About/>\r\n        else if(activeTab == 3)\r\n            return <Resume/>\r\n        else if(activeTab == 4)\r\n            return (\r\n            <SimpleReactLightbox><Projects/></SimpleReactLightbox>\r\n            )\r\n        else if(activeTab == 5)\r\n            return <Guestbook/>\r\n        else if(activeTab == 6)\r\n            return (<SimpleReactLightbox><Movie/></SimpleReactLightbox>)\r\n    }\r\n    render() {\r\n        return (this.displayContent());        \r\n    }\r\n}\r\nexport default Body;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport 'w3-css/3/w3.css'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"w3-container w3-padding-64 w3-center w3-black w3-xlarge\">\r\n                    <a className=\"icons\" href=\"https://github.com/jlee122/portfolio\"><FontAwesomeIcon icon={faGithub}/></a>\r\n                    <a className=\"icons\" href=\"https://www.linkedin.com/in/joonlee122/\"><FontAwesomeIcon icon={faLinkedin}/></a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css'\r\nimport Tablist from './Components/Tablist';\r\nimport Body from './Components/Body';\r\nimport Footer from './Components/Footer';\r\n\r\nexport class App extends Component {  \r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n    this.changeTab = (id) => {\r\n      this.setState({\r\n        activeTab: id\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  render() {\r\n    const tabs = [\r\n    {\r\n      id: 1,\r\n      title: 'Home'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'About'\r\n    }, \r\n    {\r\n      id: 3,\r\n      title: 'Resume'\r\n    }, \r\n    {\r\n      id: 4,\r\n      title: 'Projects'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Guestbook'\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Movie'\r\n    }   \r\n    ]\r\n\r\n    return (      \r\n      <div className = \"body\">\r\n        <div className=\"header\">\r\n          <h1>Welcome to Joon's Portfolio</h1>\r\n        </div>\r\n        <div className = \"nav-bar\">\r\n          <Tablist tabs={tabs} \r\n          activeTab={this.state.activeTab} \r\n          changeTab={this.changeTab}/>\r\n        </div>\r\n        <div className = \"main-body\">\r\n          <Body activeTab={this.state.activeTab}/>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <Footer/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}